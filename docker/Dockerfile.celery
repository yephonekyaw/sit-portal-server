FROM python:3.13-slim AS builder

# Set build-time environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=100

WORKDIR /build

RUN apt-get update && apt-get install -y --no-install-recommends \
    # Build essentials
    build-essential \
    curl \
    gnupg \
    apt-transport-https \
    pkg-config \
    # Database drivers build deps
    unixodbc-dev \
    libgssapi-krb5-2 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /usr/share/doc /usr/share/man

RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

COPY requirements.txt .
RUN pip install --upgrade pip setuptools wheel \
    && pip install --no-deps -r requirements.txt \
    && find /opt/venv -type f -name "*.pyc" -delete \
    && find /opt/venv -type d -name "__pycache__" -delete

FROM python:3.13-slim AS runtime

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/server" \
    PLAYWRIGHT_BROWSERS_PATH=/ms-playwright

WORKDIR /server

RUN apt-get update && apt-get install -y --no-install-recommends \
    # OCR runtime dependencies (essential for document processing)
    tesseract-ocr \
    tesseract-ocr-eng \
    # Database runtime deps
    unixodbc \
    libgssapi-krb5-2 \
    # Minimal system utils
    curl \
    gnupg \
    apt-transport-https \
    # Supervisor for process management
    supervisor \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /usr/share/doc /usr/share/man /usr/share/locale

# Install Microsoft ODBC Driver (runtime only)
RUN curl -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /usr/share/keyrings/microsoft-prod.gpg \
    && echo "deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/debian/12/prod bookworm main" > /etc/apt/sources.list.d/mssql-release.list \
    && apt-get update && ACCEPT_EULA=Y apt-get install -y --no-install-recommends \
        msodbcsql18 \
        mssql-tools18 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /usr/share/doc /usr/share/man

COPY --from=builder /opt/venv /opt/venv

RUN mkdir -p /ms-playwright \
    && python -m playwright install --with-deps --only-shell chromium

RUN mkdir -p /server/logs /server/tmp /var/log/supervisor /var/run /etc/supervisor/conf.d

COPY . .
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=3 \
    CMD supervisorctl -c /etc/supervisor/conf.d/supervisord.conf status celery-worker && supervisorctl -c /etc/supervisor/conf.d/supervisord.conf status celery-beat || exit 1

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]